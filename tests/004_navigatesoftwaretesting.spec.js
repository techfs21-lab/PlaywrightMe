import { test, expect } from '@playwright/test';

test('navigatesoftwaretesting', async ({ page }) => {
  await page.goto('https://en.wikipedia.org/wiki/Software_testing');
  await expect(page.locator('#firstHeading')).toContainText('Software testing');
  await page.getByRole('radio', { name: 'Small' }).check();
  await page.getByRole('radio', { name: 'Dark' }).check();
  await page.getByRole('radio', { name: 'Automatic' }).check();
  await page.getByRole('radio', { name: 'Light' }).check();
  await page.getByRole('link', { name: 'Economics' }).click();
  await page.getByRole('link', { name: 'History', exact: true }).click();
  await page.getByRole('button', { name: 'Toggle Goals subsection' }).click();
  await page.getByRole('link', { name: 'Finding bugs' }).click();
  await page.getByRole('link', { name: 'Ensuring requirements are' }).dblclick();
  await page.locator('#toc-Code_coverage').getByRole('link', { name: 'Code coverage' }).click();
  await page.getByRole('button', { name: 'Toggle Categories subsection' }).click();
  await page.getByRole('link', { name: 'Automated testing' }).click();
  await page.getByRole('heading', { name: 'Automated testing' }).click();
  await page.getByRole('link', { name: 'Levels' }).click();
  await page.locator('#toc-Unit_testing').getByRole('link', { name: 'Unit testing' }).click();
  await page.locator('#toc-Integration_testing').getByRole('link', { name: 'Integration testing' }).click();
  await page.locator('#toc-System_testing').getByRole('link', { name: 'System testing' }).click();
  await page.getByRole('link', { name: 'Static, dynamic, and passive' }).click();
  await page.getByRole('link', { name: 'Exploratory', exact: true }).click();
  await page.getByRole('link', { name: 'Preset testing vs adaptive' }).click();
  await page.getByRole('link', { name: 'Black/white box' }).click();
  await page.locator('#toc-White-box_testing').getByRole('link', { name: 'White-box testing' }).click();
  await page.locator('#toc-Black-box_testing').getByRole('link', { name: 'Black-box testing' }).click();
  await page.getByRole('link', { name: 'Visual testing', exact: true }).click();
  await page.getByRole('link', { name: 'Grey-box testing' }).click();
  await page.locator('#toc-Installation_testing').getByRole('link', { name: 'Installation testing' }).click();
  await page.locator('#toc-Compatibility_testing').getByRole('link', { name: 'Compatibility testing' }).click();
  await expect(page.getByRole('heading', { name: 'Compatibility testing' })).toBeVisible();
  await expect(page.locator('#Compatibility_testing')).toContainText('Compatibility testing');
  await page.getByRole('link', { name: 'Smoke and sanity testing' }).click();
  await page.locator('#toc-Regression_testing').getByRole('link', { name: 'Regression testing' }).click();
  await expect(page.locator('#Regression_testing')).toContainText('Regression testing');
  await page.locator('#toc-Acceptance_testing').getByRole('link', { name: 'Acceptance testing' }).click();
  await page.getByRole('link', { name: 'Alpha testing' }).dblclick();
  await page.getByRole('link', { name: 'Beta testing' }).click();
  await page.getByRole('link', { name: 'Functional vs non-functional' }).click();
  await page.locator('#toc-Continuous_testing').getByRole('link', { name: 'Continuous testing' }).click();
  await page.locator('#toc-Destructive_testing').getByRole('link', { name: 'Destructive testing' }).click();
  await page.locator('#toc-Software_performance_testing').getByRole('link', { name: 'Software performance testing' }).click();
  await page.locator('#toc-Usability_testing').getByRole('link', { name: 'Usability testing' }).click();
  await page.getByRole('link', { name: 'Accessibility testing' }).click();
  await page.getByRole('link', { name: 'Common standards for' }).click();
  await page.locator('#toc-Security_testing').getByRole('link', { name: 'Security testing' }).click();
  await page.getByRole('link', { name: 'Internationalization and localization', exact: true }).click();
  await page.locator('#toc-Development_testing').getByRole('link', { name: 'Development testing' }).click();
  await page.locator('[id="toc-A/B_testing"]').getByRole('link', { name: 'A/B testing' }).click();
  await page.locator('#toc-Concurrent_testing').getByRole('link', { name: 'Concurrent testing' }).click();
  await page.getByRole('link', { name: 'Conformance testing or type' }).click();
  await page.getByRole('link', { name: 'Output comparison testing' }).click();
  await page.getByRole('link', { name: 'Property testing', exact: true }).click();
  await page.locator('#toc-Metamorphic_testing').getByRole('link', { name: 'Metamorphic testing' }).click();
  await page.getByRole('link', { name: 'VCR testing' }).click();
  await page.getByRole('button', { name: 'Toggle Teamwork subsection' }).click();
  await page.getByRole('link', { name: 'Roles' }).click();
  await page.locator('#toc-Processes').getByRole('link', { name: 'Processes' }).click();
  await page.getByRole('link', { name: 'Waterfall development', exact: true }).click();
  await page.getByRole('link', { name: 'Agile development' }).click();
  await page.getByRole('link', { name: 'Sample process' }).click();
  await page.getByRole('button', { name: 'Toggle Quality subsection' }).click();
  await page.getByRole('link', { name: 'Software verification and' }).click();
  await page.getByRole('link', { name: 'Software quality assurance', exact: true }).click();
  await page.getByRole('link', { name: 'Measures' }).click();
  await page.getByRole('link', { name: 'Artifacts', exact: true }).click();
  await page.locator('#toc-Traceability_matrix').getByRole('link', { name: 'Traceability matrix' }).click();
  await page.locator('#toc-Test_case').getByRole('link', { name: 'Test case' }).click();
  await page.getByRole('link', { name: 'Test script', exact: true }).click();
  await page.locator('#toc-Test_suite').getByRole('link', { name: 'Test suite' }).click();
  await page.getByRole('link', { name: 'Test fixture or test data' }).click();
  await page.locator('#toc-Test_harness').getByRole('link', { name: 'Test harness' }).click();
  await page.getByRole('link', { name: 'Test run' }).click();
  await page.getByRole('link', { name: 'Certifications' }).click();
  await page.getByRole('link', { name: 'Controversy', exact: true }).click();
  await page.getByRole('link', { name: 'See also' }).click();
  await page.getByRole('link', { name: 'References' }).click();
  await page.getByRole('link', { name: 'Further reading' }).click();
  await page.getByRole('link', { name: 'External links' }).click();

  page.close();
  console.log("Browser was Closed");
});